@using SellAndBuy.Web.Models.Adds
@model CreateAddViewModel
@{
    ViewBag.Title = "Create your Add";
}

<h2>CreateAdd</h2>

@using (Html.BeginForm("CreateAdd", "Add", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div class="form-group">
        <div class="col-md-10">
            @Html.LabelFor(m => m.CityName, new { @class = "col-2 col-form-label" })
            @Html.DropDownListFor(m => m.CityName, new SelectList(Model.Cities, "Value"), "  -----Всички Градове-----  ")
            @Html.ValidationMessageFor(m => m.CityName, "", new { @class = "text-danger" })
        </div>
    </div>
    <br />
    <div class="form-group">
        <div class="col-md-10">
            @Html.LabelFor(m => m.Category, new { @class = "col-2 col-form-label" })
            @Html.DropDownListFor(m => m.Category, new SelectList(Model.Categories, "value"), "-----Всички Категории-----  ")
            @Html.ValidationMessageFor(m => m.Category, "", new { @class = "text-danger" })
        </div>
    </div>
    <br />
    <div class="form-group">
        <div class="col-md-10">
            @Html.LabelFor(m => m.Description, new { @class = "col-2 col-form-label" })
            @Html.EditorFor(m => m.Description)
            @Html.ValidationMessageFor(m => m.Description, "", new { @class = "text-danger" })
        </div>
    </div>
    <br />
    <div class="form-group">
        <div class="col-md-10">
            @Html.LabelFor(m => m.Price, new { @class = "col-2 col-form-label" })
            @Html.EditorFor(m => m.Price)
            @Html.ValidationMessageFor(m => m.Price, "", new { @class = "text-danger" })
        </div>
    </div>
    <br />
    <div class="form-group">
        <div>
            @Html.LabelFor(m => m.File, new { @class = "col-2 col-form-label" })
            @Html.TextBoxFor(m => m.File, new { type = "file" })
            @Html.ValidationMessageFor(m => m.File, "", new { @class = "text-danger" })
        </div>
    </div>
    <input type="submit" value="Create" name="submit" />

}

 
@section Scripts
{
    @Scripts.Render("~/bundles/jqueryval")
 
}